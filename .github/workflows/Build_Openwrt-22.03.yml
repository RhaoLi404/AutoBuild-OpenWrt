#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions

name: 云编译Openwrt22.03官方固件+插件

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      model:
        description: '选择机型'
        required: true
        default: 'Redmi_AC2100' 
        type: choice
        options:
          - 'Redmi_AC2100'
      UPLOAD_BIN_DIR:
        type: boolean
        description: '上传bin文件夹'
        required: false
        default: 'false'
      UPLOAD_FIRMWARE:
        type: boolean
        description: '上传固件'
        required: false
        default: 'true'
      UPLOAD_COWTRANSFER:
        type: boolean
        description: '上传COWTRANSFER'
        required: false
        default: 'false'
      UPLOAD_WETRANSFER:
        type: boolean
        description: '上传WETRANSFER'
        required: false
        default: 'false'
      UPLOAD_RELEASE:
        type: boolean
        description: '上传RELEASE'
        required: false
        default: 'true'
      
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        type: boolean
#   schedule:                           # 时间表
#     - cron: '0 19 * * *'              # 每天国际时间19点，北京时间凌晨3点执行(北京+8)
#  push: # push 操作
#    branches: # 分支
      #- master # 主分支
    #   paths:                            # 路径
    #     - openwrt/*                     # 监听openwrt目录下所有文件的push操作
    #paths: # 路径
      #- logs/g-dock.md # 监听logs目录下 k2.md 的push操作
  # watch:                              # 监视操作
  #   types: [started]                  # 点击 star 之后
  
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/22.03/Yuos_${{ github.event.inputs.model }}_22.03.config
  DIY_P1_SH: diy-part6.sh
  DIY_P2_SH: diy-part7.sh
#  UPLOAD_BIN_DIR: true
#  UPLOAD_FIRMWARE: true
#  UPLOAD_COWTRANSFER: false
#  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt-get install -y software-properties-common
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
        genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
        libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
        python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
        swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev gcc-13 g++-13
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 60 --slave /usr/bin/g++ g++ /usr/bin/g++-13
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $(id -u):$(id -g) /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds clean && ./scripts/feeds update -a
      
    - name: add luci-theme-netgear
      run: |
        cd openwrt
        git clone -b master https://github.com/yuos-bit/luci-theme-netgear.git feeds/kenzo/luci-theme-netgear

    - name: 更新插件
      run: |
        cd openwrt
        ./scripts/feeds update -a
        rm -rf feeds/packages/net/{brook,hysteria,xray-core,xray-plugin,haproxy,naiveproxy,shadowsocksr-libev,shadowsocks-rust,shadowsocks-libev,simple-obfs,trojan,trojan-go,trojan-plus,tuic-client,ua2f,v2ray-core,v2ray-geodata,v2ray-geoview,v2ray-plugin,v2raya} \
               feeds/packages/devel/gn \
               feeds/packages/libs/libfido2/Makefile \
        cp -rf $GITHUB_WORKSPACE/patchs/immortalwrt-mt798x/libfido2/Makefile $GITHUB_WORKSPACE/openwrt/feeds/packages/libs/libfido2/Makefile

    - name: 安装插件
      run: |
        cd openwrt
        ./scripts/feeds install -p helloworld shadowsocks-libev
        ./scripts/feeds install -p kenzo luci-app-dnsfilter luci-app-istorex luci-app-partexp luci-app-store luci-theme-argone luci-theme-atmaterial_new luci-theme-tomato
        ./scripts/feeds install -p small brook dns2tcp gn lua-neturl luci-app-fchomo luci-app-homeproxy luci-app-passwall luci-app-passwall2 pdnsd-alt edsocks2 shadowsocksr-libev trojan-plus
        ./scripts/feeds install -p small8 LingTiGameAcc MentoHUST-OpenWrt-ipk UA2F UnblockNeteaseMusic-Go UnblockNeteaseMusic adguardhome airconnect alac alist aliyundrive-fuse aliyundrive-webdav amule aria2 ariang autoshare-ksmbd autoshare-samba autoupdate baidupcs-web base-files btop cdnspeedtest cgroupfs-mount coremark cpulimit cups cxxopts dae daed-next daed ddns-scripts dnsforwardel dnsmasq dnsproxy docker dockerd ffmpeg-remux ffmpeg-static firewall firewall4 floatip frp fullconenat-nft fullconenat gmediarender go-aliyundrive-webdav haproxy headscale homebox homeredirect iptvhelper istoreenhance jpcre2 libcron libdouble-conversion libnftnl libtorrent-rasterbar linkease linkmount lua-ipops lua-maxminddb luci-app-3ginfo-lite luci-app-LingTiGameAcc luci-app-UUGameAcc luci-app-adguardhome luci-app-advanced luci-app-airconnect luci-app-aliddns luci-app-alist luci-app-aliyundrive-fuse luci-app-aliyundrive-webdav luci-app-alpha-config luci-app-amlogic luci-app-ap-modem luci-app-arcadia luci-app-argon-config luci-app-argone-config luci-app-autoipsetaddel luci-app-autorepeater luci-app-autoshell luci-app-autotimeset luci-app-baidupcs-web luci-app-bandwidthd luci-app-beardropper luci-app-bmtedge luci-app-chatgpt-web luci-app-chinesesubfinder luci-app-chongyoung luci-app-chongyoung2.0 luci-app-clouddrive2 luci-app-cloudflarespeedtest luci-app-codeserver luci-app-control-timewol luci-app-control-webrestriction luci-app-control-weburl luci-app-cupsd luci-app-dnscrypt-proxy2 luci-app-dnsmasq-ipset luci-app-dogcom luci-app-drawio luci-app-easytier luci-app-easyupdate luci-app-emby luci-app-eqosplus luci-app-excalidraw luci-app-fakemesh luci-app-feishuvpn luci-app-gecoosac luci-app-godproxy luci-app-gogs luci-app-gowebdav luci-app-guest-wifi luci-app-heimdall luci-app-homeassistant luci-app-homebridge luci-app-htreader luci-app-immich luci-app-internet-detector luci-app-iperf3-server luci-app-ipsec-server luci-app-istoredup luci-app-istorego luci-app-istorepanel luci-app-ittools luci-app-jackett luci-app-jellyfin luci-app-kodexplorel luci-app-koolproxyR luci-app-lanraragi luci-app-mac luci-app-macvlan luci-app-mail luci-app-memos luci-app-mentohust luci-app-mfun luci-app-minieap luci-app-msd_lite luci-app-mtphotos luci-app-multiaccountdia luci-app-mymind luci-app-nastools luci-app-natmap luci-app-natter luci-app-natter2 luci-app-navidrome luci-app-nekobox luci-app-netdata luci-app-netkeeper-interceptior luci-app-netspeedtest luci-app-nextcloud luci-app-nginx-manager luci-app-nginx-pingos luci-app-npc luci-app-oaf luci-app-oled luci-app-oneapi luci-app-onliner luci-app-openvpn-client luci-app-openvpn-server luci-app-openwebui luci-app-ota luci-app-owntone luci-app-packet-capture luci-app-penpot luci-app-photoprism luci-app-plex luci-app-poweroff luci-app-poweroffdevice luci-app-pppoe-relay luci-app-pppoe-server luci-app-pptp-server luci-app-pushbot luci-app-pve luci-app-qbittorrent luci-app-ramfree luci-app-routerdog luci-app-rtbwmon luci-app-rtorrent luci-app-runmynas luci-app-shanligong luci-app-shortcutmenu luci-app-shutdown luci-app-sms-tool luci-app-socat luci-app-softethervpn luci-app-speedtest-web luci-app-ssr-mudb-server luci-app-sunpanel luci-app-supervisord luci-app-suselogin luci-app-syncthing luci-app-systools luci-app-sysuh3c luci-app-tailscale luci-app-tcpdump luci-app-tencentcloud-cos luci-app-tencentddns luci-app-timecontrol luci-app-tinyfilemanager luci-app-torbp luci-app-transmission luci-app-ttnode luci-app-typecho luci-app-ubuntu luci-app-ubuntu2 luci-app-udp2raw luci-app-unblockmusic luci-app-unifi luci-app-unishare luci-app-usb-printel luci-app-usb3disable luci-app-vaultwarden luci-app-verysync luci-app-vlmcsd luci-app-wan-mac luci-app-webd luci-app-webviewdev luci-app-webvirtcloud luci-app-wifidog luci-app-wizard luci-app-wolplus luci-app-wrtbwmon luci-app-wxedge luci-app-xlnetacc luci-app-xray luci-app-xteve luci-app-xunlei luci-app-xunyou luci-lib-fs luci-lib-iform luci-nginxer luci-proto-minieap luci-proto-netkeeper luci-theme-edge luci-theme-inas lucj-theme-kucat luci-themedog mentohust mhz miniupnpd-iptables msd_lite msmtp mwan3 nanohatoled natflow natter natter2 netatalk netkeeper-interception netkeeper netmaker nftables nginx ngroko njitclient nps open-app-filter openvpn-easy-rsa-whisky openwrt-minieap openwrt-minisign opkg oscam pgyvpn phtunnel ppp qt6base qt6tools quickjspp rapidjson rblibtorrent redsocks2 routergo rp-pppoe scutclient shadowsocksr-libe speedtestcli sub-web subconverter sunpanel sysuh3c tailscale tcpping toml11 transmission-web-contro transmission uwsgi upx-static upx unishare verysync vlmcsd vmease vsftpd watchcat webdav2 wireless-regdb wrtbwmon wxbase xray-core xray-plugin xunyou
    
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
#        #Downgrade Xray to 1.5.5, this is only for passwall build due to low on nand flash free space
#        sed -i 's/1.6.0/1.5.5/g' feeds/packages/net/xray-core/Makefile
#        sed -i 's/b65375090a2d48d358a582837d485bfaa9572e4d1f5a649895b9fd83d0f69e43/3f8d04fef82a922c83bab43cac6c86a76386cf195eb510ccf1cc175982693893/g' feeds/packages/net/xray-core/Makefile

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: | 
        df -hT
        
    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && github.event.inputs.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && github.event.inputs.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && github.event.inputs.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "url=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && github.event.inputs.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
    - name: Generate release tag
      id: tag
      if: github.event.inputs.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")-${{ github.event.inputs.model }}" >> $GITHUB_OUTPUT
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2.0.4
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 4

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
